<style>
    .container {
        min-height: 80vh;
    }

    .title {
        font-size: 5vw !important;
    }

    .statistic-presenter {
        width: 95vw !important;
        overflow: auto;
    }
</style>

<div class="container-fluid">
    <div class="row my-5">
        <div class="col-12">
            <h1 class="text-center title">Thống kê năm</h1>
            <div class="statistic-presenter d-block m-0 mx-auto shadow-lg p-5"></div>
        </div>
    </div>
</div>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script>
    $(function () {
        let nowYear = +new Date().getFullYear();
        let nowMonth = +(new Date().getMonth() + 1);
        let nowDate = +(new Date().getDate() + 1);

        nowMonth = 12;
        nowYear = 2020;

        $.get(`/api/products/bill?year=${nowYear}`, (data, status) => {
            let tongTienNhan = {};
            let tongVon = {};

            for (let i = 1; i <= nowMonth; i++) {
                for (let unit of data) {
                    [billYear, billMonth, billDate] = unit.HDB_THOI_GIAN.split('-');
                    if (+billMonth === i) {
                        tongVon[i] = +unit.LDT_GIA_MUA;
                        tongTienNhan[i] = +unit.LDT_GIA;
                    }
                }
                tongVon[i] = tongVon[i] || 0;
                tongTienNhan[i] = tongTienNhan[i] || 0;
            }
            let detail = [];
            for (let i = 1; i <= nowMonth; i++) {
                detail.push([
                    `${i}`,
                    tongVon[i],
                    tongTienNhan[i],
                    tongTienNhan[i] - tongVon[i]
                ]);
            }
            /////
            google.charts.load('current', { 'packages': ['line'] });
            google.charts.setOnLoadCallback(drawChart);

            function drawChart() {

                var data = new google.visualization.DataTable();
                data.addColumn('string', 'Tháng');
                data.addColumn('number', 'Tổng vốn');
                data.addColumn('number', 'Tổng tiền nhận');
                data.addColumn('number', 'Lợi nhuận');

                data.addRows(detail);

                var options = {
                    chart: {
                        title: 'Biểu đồ thống kê doanh số',
                        subtitle: `thống kê từ 1/${nowYear} đến ${nowDate}/${nowMonth}/${nowYear}`
                    },
                    height: 500,
                    axes: {
                        x: {
                            0: { side: 'bottom' }
                        }
                    },
                    vAxis: {
                        title: 'VNĐ',
                        format: 'decimal'
                    }
                };

                var chart = new google.charts.Line(document.querySelector('.statistic-presenter'));

                chart.draw(data, google.charts.Line.convertOptions(options));
            }
            /////
        });
    });
</script>