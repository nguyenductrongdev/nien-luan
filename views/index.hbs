<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-9">
            <div id="carouselExampleIndicators" class="carousel slide
                d-inline-block w-100" data-ride="carousel">
                <ol class="carousel-indicators">
                    <li data-target="#carouselExampleIndicators"
                        data-slide-to="0" class="active"></li>
                    <li data-target="#carouselExampleIndicators"
                        data-slide-to="1"></li>
                    <li data-target="#carouselExampleIndicators"
                        data-slide-to="2"></li>
                </ol>
                <div class="carousel-inner">
                    <div class="carousel-item active">
                        <img src="/asset/images/slider/slider-1.jpg"
                            class="d-block w-100" alt="...">
                    </div>
                    <div class="carousel-item">
                        <img src="/asset/images/slider/slider-2.jpeg"
                            class="d-block w-100" alt="...">
                    </div>
                    <div class="carousel-item">
                        <img src="/asset/images/slider/silder-3.jpeg"
                            class="d-block w-100" alt="...">
                    </div>
                </div>
                <a class="carousel-control-prev"
                    href="#carouselExampleIndicators" role="button"
                    data-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next"
                    href="#carouselExampleIndicators" role="button"
                    data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>
        </div>
        <div class="col-md-3">
            <img class="img-fluid w-100"
                src="/asset/images/marketing/sale-1.png" alt="" />
        </div>
    </div>
</div>

<ul class="list-group list-group-horizontal d-flex justify-content-center
    flex-wrap brand-list">
    <li class="list-group-item"><img class="img-fluid btn-brand"
            src="/asset/images/brands/logoapple.jpg" alt="apple"
            role="button" data-brand="AP">
    </li>
    <li class="list-group-item"><img class="img-fluid btn-brand"
            src="/asset/images/brands/logosamsung.jpg"
            alt="samsung" role="button" data-brand="SS"></li>
    <li class="list-group-item"><img class="img-fluid btn-brand"
            src="/asset/images/brands/logovsmart.png" alt="vsmart"
            role="button" data-brand="VS"></li>
    <li class="list-group-item"><img class="img-fluid btn-brand"
            src="/asset/images/brands/logoxiaomi.jpg" alt="xiaomi"
            role="button" data-brand="XM"></li>
    <li class="list-group-item"><img class="img-fluid btn-brand"
            src="/asset/images/brands/logonokia.jpg" alt="nokia"
            role="button" data-brand="NK">
    </li>
    <li class="list-group-item"><img class="img-fluid btn-brand"
            src="/asset/images/brands/logoasus.png" alt="asus"
            role="button" data-brand="AS">
    </li>
    <li class="list-group-item"><img class="img-fluid btn-brand"
            src="/asset/images/brands/logooppo.png" alt="oppo"
            role="button" data-brand="OP">
    </li>
</ul>


<nav class="navbar navbar-expand-lg navbar-light p-0 tool-bar my-1">
    <div class="collapse navbar-collapse" id="navbarNavDropdown">
        <ul class="navbar-nav">
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#"
                    id="navbarDropdownMenuLink" role="button"
                    data-toggle="dropdown" aria-haspopup="true"
                    aria-expanded="false">
                    Giá
                </a>
                <div class="dropdown-menu"
                    aria-labelledby="navbarDropdownMenuLink">
                    <span class="dropdown-item btn-desc" role="button">Giá giảm
                        dần</span>
                    <span class="dropdown-item btn-asc" role="button">Giá tăng
                        dần</span>
                </div>
            </li>

            <li class="nav-item">
                <a class="nav-link dropdown-toggle" href="#" type="button"
                    data-toggle="collapse"
                    data-target="#collapseExample" aria-expanded="false"
                    aria-controls="collapseExample">
                    Bộ lọc
                </a>
                <div class="collapse position-absolute filter p-2"
                    id="collapseExample" style="z-index: 100;">
                    <ul class="list-unstyled d-inline-block">
                        <span class="font-weight-bold">Bộ nhớ:</span>
                        <li>
                            <label class="form-check-label">
                                <input type="checkbox" name="txtROM"
                                    id="txtROM-0" value="32"> 32GB
                            </label>
                        </li>
                        <li>
                            <label class="form-check-label">
                                <input type="checkbox" name="txtROM"
                                    id="txtROM-1" value="64"> 64GB
                            </label>
                        </li>
                        <li>
                            <label class="form-check-label">
                                <input type="checkbox" name="txtROM"
                                    id="txtROM-2" value="128"> 128GB
                            </label>
                        </li>
                        <li>
                            <label class="form-check-label">
                                <input type="checkbox" name="txtROM"
                                    id="txtROM-3" value="256"> 256GB
                            </label>
                        </li>
                        <li>
                            <label class="form-check-label">
                                <input type="checkbox" name="txtROM"
                                    id="txtROM-4" value="512"> 512GB
                            </label>
                        </li>
                    </ul>

                    <ul class="list-unstyled d-inline-block">
                        <span class="font-weight-bold">RAM:</span>
                        <li>
                            <label class="form-check-label">
                                <input type="checkbox" name="txtRAM"
                                    id="txtRAM-0" value="2"> 2GB
                            </li>
                            <li>
                                <label class="form-check-label">
                                    <input type="checkbox" name="txtRAM"
                                        id="txtRAM-1" value="4"> 4GB
                                </label>
                            </li>
                            <li>
                                <label class="form-check-label">
                                    <input type="checkbox" name="txtRAM"
                                        id="txtRAM-2" value="6"> 6GB
                                </label>
                            </li>
                            <li>
                                <label class="form-check-label">
                                    <input type="checkbox" name="txtRAM"
                                        id="txtRAM-3" value="8"> 8GB
                                </label>
                            </li>
                            <li>
                                <label class="form-check-label">
                                    <input type="checkbox" name="txtRAM"
                                        id="txtRAM-4" value="12"> 12GB
                                </label>
                            </li>
                        </ul>
                        <ul class="list-unstyled d-inline-block">
                            <span class="font-weight-bold">Dung lượng pin:</span>
                            <li>
                                <label class="form-check-label">
                                    <input type="checkbox" name="txtPin"
                                        id="txtPin-0" value="<4000">
                                    &lt; 4000 mAh
                                </label>
                            </li>
                            <li>
                                <label class="form-check-label">
                                    <input type="checkbox" name="txtPin"
                                        id="txtPin-1" value=">=4000">
                                    &ge; 4000 mAh
                                </label>
                            </li>
                        </ul>
                    </div>
                </li>
            </ul>

            <div class="d-flex flex-row ml-auto">
                <input type="text" id="searchContent" class="form-control
                    form-control-sm mr-1" placeholder="Search...">
                <button type="button" class="btn btn-success btn-search">Search</button>
            </div>
        </div>
    </nav>

    <main class="container-fluid">
        <div class="row my-3">
            <div class="col-md-12 d-flex justify-content-center
                align-items-center">
                {{!-- START product-field --}}
                <div class="product-field">
                </div>
                {{!-- END product-field --}}
            </div>
        </div>
        <div class="row">
            <nav class="col-12 d-flex justify-content-end">
                <ul class="pagination pagination-sm index-pagination"></ul>
            </nav>
        </div>
    </main>

    <script>
    const PRODUCT_PER_PAGE = 18;

    axios.get(`/api/products/page?page=1&productsPerPage=${PRODUCT_PER_PAGE}`)
        .then(response => response.data)
        .then(function (products) {
            $(async function () {
                const productField = $('.product-field');
                let viewProducts = products;

                let filter = {
                    brands: [],
                    rams: [],
                    roms: [],
                    pins: []
                }

                let PRODUCT_LENGTH = await axios.get('/api/products/getNbProducts')
                    .then(result => result.data[0].LDT_LENGTH);


                function emptyPagination() {
                    $('.index-pagination').empty();
                }

                function drawPagination() {
                    emptyPagination();
                    let nbPageitem = Math.ceil(PRODUCT_LENGTH / PRODUCT_PER_PAGE);
                    for (let i = 0; i < nbPageitem; i++) {
                        let pageItem = $(`<li class="page-item"><span class="page-link" role="button" data-page="${i + 1}">${i + 1}</span></li>`);
                        if (i === 0) {
                            pageItem.addClass('active');
                        }
                        if (i > 5) pageItem.hide();
                        $('.index-pagination').append(pageItem);
                    }
                }

                function getProductOfPage(page = 1) {
                    return axios.get(`/api/products/page?page=${page}&productsPerPage=${PRODUCT_PER_PAGE}`)
                        .then(response => response.data);
                }

                async function filterProducts() {
                    try {
                        let apiStr = `/api/products/filter?`;
                        if(filter.rams.length > 0) apiStr += `rams=${filter.rams.join()}&`;
                        if(filter.roms.length > 0) apiStr += `roms=${filter.roms.join()}&`
                        if(filter.brands.length > 0) apiStr += `brands=${filter.brands.join()}&&`
                        if(filter.pins.length > 0) apiStr += `pins=${filter.pins.join()}`

                        let res = await axios.get(apiStr)
                            .then(res => res.data);
                        return res;

                    } catch (error) {
                        throw error
                    }
                }

                function descCost(products) {
                    return Array.from(products.sort((a, b) => {
                        return b.LDT_GIA - a.LDT_GIA;
                    }));
                }

                function ascCost(products) {
                    return Array.from(products.sort((a, b) => {
                        return a.LDT_GIA - b.LDT_GIA;
                    }));
                }

                function render(products) {
                    productField.empty();
                    for (let product of products) {
                        let str = '';
                        if (product.CTKM_HE_SO) {
                            str = `<div class="card text-center shadow position-relative" role="button">
                                    <a href="/products/view-product?LDT_MA=${product.LDT_MA}" class="text-dark text-decoration-none">
                                    <img src="${product.HA_URL}" class="card-img-top overflow-hidden w-100" alt="abc" />
                                    <div class="card-body">
                                        <p class="card-title h5">${product.LDT_TEN}</p>
                                        <p class="card-text"><del><small class="text-muted font-italic">${(product.LDT_GIA).toLocaleString('vi')}</small></del></p>
                                        <p class="card-text cost font-weight-bold">${(product.LDT_GIA - (product.LDT_GIA * product.CTKM_HE_SO)).toLocaleString('vi')} 
                                            <span class="text-danger font-italic font-weight-light">-${product.CTKM_HE_SO * 100}%</span>
                                        </p>
                                    </div>
                                    <div class="position-absolute text-left card--overlay">
                                        <ul class="list-unstyled">
                                            <li>Chip xử lý: ${product.LDT_TEN_CHIP}</li>
                                            <li>Pin: ${product.LDT_DUNG_LUONG_PIN} mAh</li>
                                            <li>Bộ nhớ trong: ${product.LDT_DUNG_LUONG_ROM} GB</li>
                                            <li>RAM: ${product.LDT_DUNG_LUONG_RAM} GB</li>
                                        </ul>
                                    </div>
                                    </a>
                                </div>`;
                        }
                        else {
                            str = `<div class="card text-center shadow overflow-hidden position-relative" role="button">
                                    <a href="/products/view-product?LDT_MA=${product.LDT_MA}" class="text-dark text-decoration-none">
                                        <img src="${product.HA_URL}" class="card-img-top w-100" alt="abc" />
                                        <div class="card-body">
                                            <p class="card-title h5">${product.LDT_TEN}</p>
                                            <p class="card-text"><del><small class="text-muted font-italic invi invisible">${(product.LDT_GIA).toLocaleString('vi')}</small></del></p>
                                            <p class="card-text cost font-weight-bold" > ${(product.LDT_GIA - (product.LDT_GIA * product.CTKM_HE_SO)).toLocaleString('vi')}</p>
                                        </div>
                                        <div class="position-absolute text-left card--overlay">
                                            <ul class="list-unstyled">
                                                <li>Chip xử lý: ${product.LDT_TEN_CHIP}</li>
                                                <li>Pin: ${product.LDT_DUNG_LUONG_PIN} mAh</li>
                                                <li>Bộ nhớ trong: ${product.LDT_DUNG_LUONG_ROM} GB</li>
                                                <li>RAM: ${product.LDT_DUNG_LUONG_RAM} GB</li>
                                            </ul>
                                        </div>
                                    </a>
                                </div>`;
                        }
                        productField.append(str);
                    }
                }

                render(viewProducts);
                drawPagination();

                $('.btn-asc').click(function () {
                    render(ascCost(viewProducts));
                });


                $('.btn-desc').click(function () {
                    render(descCost(viewProducts));
                });

                $('.btn-brand').click(async function () {
                    $(this).parent().toggleClass('hight-light');
                    let brands = getBrandsFilter();

                    // case removed all hight-light brand
                    if (brands.length === 0) {
                        filter.brands = [];
                    } else {
                        emptyPagination();
                        filter.brands = brands;
                    }
                    viewProducts = await filterProducts();
                    render(viewProducts);
                });


                $(document).on('click', '.index-pagination .page-link', function () {
                    $('.index-pagination .active').removeClass('active');
                    // add .active to page-item clicked
                    $(this).parents('li').addClass('active');

                    let page = +$(this).attr('data-page');
                    $('.index-pagination').children().hide();
                    let startShowIndex = (page - 3 > 0) ? page - 3 : 0;
                    for (let i = startShowIndex; i <= startShowIndex + 5; i++) {
                        if (i < 0) i = 0;
                        $('.index-pagination').children().eq(i).show();
                    }

                    axios.get(`/api/products/page?page=${page}&productsPerPage=${PRODUCT_PER_PAGE}`)
                        .then(result => result.data)
                        .then(product => {
                            viewProducts = product;
                            render(product);
                        });
                });

                function getBrandsFilter() {
                    // get brands checked (hight-light)
                    let brandsFilter = [];
                    let x = $.each($('.hight-light'), function () {
                        brandsFilter.push($(this).children().attr('data-brand'));
                    });
                    return brandsFilter;
                }

                $('input[name="txtROM"]').click(async function () {
                    emptyPagination();
                    viewProducts = [];
                    let ROMvalues = [];
                    $.each($('input[name="txtROM"]:checked'), function () {
                        ROMvalues.push($(this).val());
                    });
                    if (ROMvalues.length === 0) {
                        filter.roms = [];
                    } else {
                        filter.roms = ROMvalues;
                    }
                    viewProducts = await filterProducts();
                    render(viewProducts);
                });

                $('input[name="txtPin"]').click(async function () {
                    emptyPagination();
                    viewProducts = [];
                    let pinOptions = [];
                    $.each($('input[name="txtPin"]:checked'), function () {
                        pinOptions.push($(this).val());
                    });
                    if (pinOptions.length === 0) {
                        filter.pins = [];
                    } else {
                        filter.pins = pinOptions;
                    }
                    viewProducts = await filterProducts();
                    render(viewProducts);
                });

                $('input[name="txtRAM"]').click(async function () {
                    emptyPagination();
                    viewProducts = [];
                    let RAMvalues = [];
                    $.each($('input[name="txtRAM"]:checked'), function () {
                        RAMvalues.push($(this).val());
                    });

                    if (RAMvalues.length === 0) {
                        filter.rams = [];
                    }
                    else {
                        filter.rams = RAMvalues;
                    }
                    viewProducts = await filterProducts();
                    render(viewProducts);
                });

                $('.btn-search').click(async function () {
                    emptyPagination();
                    let searchContent = $('#searchContent').val();
                    viewProducts = await axios.get(`api/products/search?content=${searchContent}`)
                        .then(response => response.data);
                    $('#searchContent').val('');
                    render(viewProducts);
                });

                // animation
                $(document)
                    .on('mouseenter', '.card a', function () {
                        $(this).children('.card--overlay').css({
                            "opacity": "1",
                            "transform": "rotateY(0)",
                            "transition": "transform 0.3s, background-color 0.1s",
                            //"mix-blend-mode": "overlay",
                            "background-color": "rgba(255, 255, 255, 0.5)",
                        });
                    })
                    .on('mouseleave', '.card a', function () {
                        $(this).children('.card--overlay').css({
                            "opacity": "0",
                            "transform": "rotateY(180deg)",
                            "transition": "all 0.5s"
                        });
                    });
            });
        });
</script>